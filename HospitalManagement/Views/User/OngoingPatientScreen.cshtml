@{
    ViewData["Title"] = "Màn hình gọi bệnh nhân";
    Layout = null;
}

<head>
    <meta charset="utf-8">
    <title>Danh sách bệnh nhân sắp tới</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <link href="img/favicon.ico" rel="icon">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;500&family=Roboto:wght@500;700;900&display=swap" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">
    <link href="/lib/animate/animate.min.css" rel="stylesheet">
    <link href="/lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">
    <link href="/lib/tempusdominus/css/tempusdominus-bootstrap-4.min.css" rel="stylesheet" />
    <link href="/css/bootstrap.min.css" rel="stylesheet">
    <link href="/css/style.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />
</head>
<body>
    <div>
        @if (TempData["error"] != null)
        {
            <div id="popup-alert" class="popup-alert alert alert-danger alert-dismissible fade show text-center" role="alert" style="z-index: 1055; border-radius: 8px;">
                <div>@TempData["error"]</div>
            </div>
        }
        @if (TempData["success"] != null)
        {
            <div id="popup-alert" class="popup-alert alert alert-success alert-dismissible fade show text-center" role="alert" style="z-index: 1055; border-radius: 8px;">
                <div>@TempData["success"]</div>
            </div>
        }
    </div>
    <div style="display: flex; align-items: center;">
        <h1 id="currentPatient"
            class="text-danger fw-bold mb-4"
            style="font-size: 4rem; flex: 0 0 70%; margin: 50px;">
            Đang tải...
        </h1>
        <h2 style="flex: 0 0 30%; margin: 0;">
            Bác sĩ: @ViewBag.DoctorName
        </h2>
    </div>

    @if (User.IsInRole("Doctor"))
    {
        <div class="text-center mb-4">
            <button onclick="nextPatient()" class="btn btn-lg btn-success px-5 py-2">Tiếp theo</button>
        </div>
    }

    <div class="row">
        <!-- Bảng bên trái -->
        <div class="col-md-6">
            <table class="table table-striped table-bordered">
                <thead class="table-light">
                    <tr>
                        <th>STT</th>
                        <th>Tên bệnh nhân</th>
                    </tr>
                </thead>
                <tbody id="leftTableBody"></tbody>
            </table>
        </div>

        <!-- Bảng bên phải -->
        <div class="col-md-6">
            <table class="table table-striped table-bordered">
                <thead class="table-light">
                    <tr>
                        <th>STT</th>
                        <th>Tên bệnh nhân</th>
                    </tr>
                </thead>
                <tbody id="rightTableBody"></tbody>
            </table>
        </div>
    </div>

    <script>
        let patients = []; // toàn bộ danh sách
        let hiddenIds = JSON.parse(localStorage.getItem('hiddenPatients') || "[]");

        function fetchPatients() {
            fetch('/User/GetTodayPatients') // bạn thay đúng route tương ứng
                .then(res => res.json())
                .then(data => {
                    patients = data.filter(p => !hiddenIds.includes(p.id));
                    renderPatients();
                });
        }

        function renderPatients() {
            const leftTable = document.getElementById("leftTableBody");
            const rightTable = document.getElementById("rightTableBody");
            const currentPatient = document.getElementById("currentPatient");

            leftTable.innerHTML = "";
            rightTable.innerHTML = "";

            if (patients.length > 0) {
                currentPatient.innerText = "Mời bệnh nhân: " + patients[0].patientName;
            } else {
                currentPatient.innerText = "Không còn bệnh nhân nào!";
            }

            // chia đôi danh sách
            const half = Math.ceil(patients.length / 2);
            const left = patients.slice(0, half);
            const right = patients.slice(half);

            left.forEach((p, index) => {
                const tr = document.createElement("tr");
                tr.innerHTML = `<td>${index + 1}</td><td>${p.patientName}</td>`;
                leftTable.appendChild(tr);
            });

            right.forEach((p, index) => {
                const tr = document.createElement("tr");
                tr.innerHTML = `<td>${index + 1 + half}</td><td>${p.patientName}</td>`;
                rightTable.appendChild(tr);
            });
        }

        function nextPatient() {
            if (patients.length > 0) {
                const id = patients[0].id;
                hiddenIds.push(id);
                sessionStorage.setItem('hiddenPatients', JSON.stringify(hiddenIds));
                fetchPatients();
            }
        }

        // Auto-hide popup alerts after 3 seconds
        window.setTimeout(function () {
            const alertBox = document.getElementById('popup-alert');
            if (alertBox) {
                alertBox.classList.remove('show');
                alertBox.classList.add('hide');
                setTimeout(() => alertBox.remove(), 500);
            }
        }, 3000);

        // gọi ngay và định kỳ
        fetchPatients();
        setInterval(fetchPatients, 10000);
    </script>


</body>
