@using X.PagedList
@using X.PagedList.Mvc.Core
@using HospitalManagement.Helpers
@model IPagedList<HospitalManagement.Models.Test>

@{

	ViewData["Title"] = "Danh sách xét nghiệm";
	var isAdmin = User.IsInRole("Admin");
}
@section Styles {
	<style>
		#loadingOverlay {
			display: none !important;
		}
	</style>
}

<div class="container-fluid page-header py-5 mb-5 wow fadeIn" data-wow-delay="0.1s">
	<div class="container py-5">
		<h1 class="display-3 text-white mb-3 animated slideInDown">Xét nghiệm</h1>
		<nav aria-label="breadcrumb animated slideInDown">
			<ol class="breadcrumb text-uppercase mb-0">
				<li class="breadcrumb-item"><a class="text-white" href="/">Trang chủ</a></li>
				<li class="breadcrumb-item text-primary active" aria-current="page">Xét nghiệm</li>
			</ol>
		</nav>
	</div>
</div>

<div class="container-xxl py-5">
	<div class="container">
		<div class="d-flex justify-content-between align-items-center mb-4">
			<h2 class="text-primary">Danh sách xét nghiệm</h2>
			@if (isAdmin)
			{
				<a asp-action="Create" class="btn btn-primary">
					<i class="fas fa-plus me-2"></i>Thêm xét nghiệm mới
				</a>
			}
		</div>

		<!-- Search and Sort Form -->
		<form asp-action="Index" method="get" class="row g-3 mb-4">
			<div class="col-md-4">
				<input type="text" name="searchName" value="@ViewBag.SearchName" class="form-control" placeholder="Tìm kiếm theo tên..." />
			</div>
			<div class="col-md-3">
				<select name="sortOrder" class="form-select">
					<option value="">-- Sắp xếp theo giá --</option>
					<option value="asc" selected="@(ViewBag.SortOrder == "asc")">Giá: Thấp đến cao</option>
					<option value="desc" selected="@(ViewBag.SortOrder == "desc")">Giá: Cao đến thấp</option>
				</select>
			</div>
			<div class="col-md-2">
				<button type="submit" class="btn btn-primary w-100">
					<i class="fas fa-search me-1"></i>Áp dụng
				</button>
			</div>
		</form>
		<div class="table-responsive">
			<table class="table table-bordered table-hover align-middle text-center">
				<thead class="table-light">
					<tr>
						<th>ID</th>
						<th>Tên xét nghiệm</th>
						<th>Giá</th>
						<th>Loại phòng</th>
						@if (User.IsInRole(AppConstants.Roles.Admin))
						{
							<th>Hành động</th>
						}
					</tr>
				</thead>
				<tbody>
					@foreach (var item in Model)
					{
						<tr>
							<td>@item.TestId</td>
							<td>@item.Name</td>
							<td>@String.Format("{0:N0}", item.Price) ₫</td>
							<td>@item.RoomType</td>
							@if (User.IsInRole(AppConstants.Roles.Admin))
							{
								<td>
									<a asp-action="Update" asp-route-id="@item.TestId" class="btn btn-sm btn-primary">Cập nhật</a>
								</td>
							}
						</tr>
					}
				</tbody>
			</table>
			@if (Model.PageCount > 1)
			{
				<div class="d-flex justify-content-center mt-4">
					@Html.PagedListPager(Model, page => Url.Action("Index", new {
					page,
								searchName = ViewBag.CurrentSearchName,
								sortOrder = ViewBag.CurrentSortOrder,
								minPrice = ViewBag.CurrentMinPrice,
								maxPrice = ViewBag.CurrentMaxPrice
								}), new PagedListRenderOptions
				{
					DisplayLinkToFirstPage = PagedListDisplayMode.Always,
					DisplayLinkToLastPage = PagedListDisplayMode.Always,
					DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
					DisplayLinkToNextPage = PagedListDisplayMode.Always,
					DisplayLinkToIndividualPages = true,
					MaximumPageNumbersToDisplay = 5,
					UlElementClasses = new[] { "pagination" },
					LiElementClasses = new[] { "page-item" },
					PageClasses = new[] { "page-link" }
				})
			</div>
						}
		</div>
	</div>
</div>
