@using HospitalManagement.Helpers
@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<HospitalManagement.Models.Service>
@{
	ViewBag.Title = "Quản lý dịch vụ";
	var isAdmin = User.IsInRole("Admin");
}

@section Styles {
	<link rel="stylesheet" href="~/css/Package/CreatePackage.css">
	<style>
		#loadingOverlay {
			display: none !important;
		}
	</style>

}
<div class="container py-4">
	<div class="d-flex justify-content-between align-items-center mb-3">
		<h2 class="text-primary">Danh sách dịch vụ</h2>
		@if (isAdmin)
		{
			<a asp-action="Create" class="btn btn-primary">+ Thêm dịch vụ</a>
		}
	</div>
	<table class="table table-bordered table-hover align-middle text-center">
		<thead class="table-light">
			<tr>
				<th>ID</th>
				<th>Tên dịch vụ</th>
				<th>Giá</th>
				@if (isAdmin)
				{
					<th>Trạng thái</th>
					<th>Hành động</th>
				}
			</tr>
		</thead>
		<tbody>
			@foreach (var item in Model)
			{
				<tr>
					<td>@item.ServiceId</td>
					<td>@item.ServiceType</td>
					<td class="">
						@String.Format("{0:N0}", item.ServicePrice) ₫
						@if (User.IsInRole(AppConstants.Roles.Patient))
						{
							<a asp-controller="Appointment" asp-action="BookingByService" asp-route-serviceId="@item.ServiceId" class="btn btn-sm btn-primary">Đặt hẹn</a>
						}
					</td>

					@if (isAdmin)
					{
						<td>
							@if (item.IsDeleted)
							{
								<span class="badge bg-danger">Đã ẩn</span>
							}
							else
							{
								<span class="badge bg-success">Đang hiện</span>
							}
						</td>
						<td>
							<a asp-action="Update" asp-route-id="@item.ServiceId" class="btn btn-sm btn-primary">Cập nhật</a>
							@if (!item.IsDeleted)
							{
								<a asp-action="SoftDelete" asp-route-id="@item.ServiceId" class="btn btn-sm btn-danger ms-1">Ẩn</a>
							}
							else
							{
								<a asp-action="Restore" asp-route-id="@item.ServiceId" class="btn btn-sm btn-warning ms-1">Khôi phục</a>
							}
						</td>
					}
				</tr>
			}
		</tbody>
	</table>
	@if (Model.PageCount > 1)
	{
		<div class="d-flex justify-content-center mt-4">
			@Html.PagedListPager(Model, page => Url.Action("Index", new { page }), new PagedListRenderOptions
			{
				DisplayLinkToFirstPage = PagedListDisplayMode.Always,
				DisplayLinkToLastPage = PagedListDisplayMode.Always,
				DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
				DisplayLinkToNextPage = PagedListDisplayMode.Always,
				DisplayLinkToIndividualPages = true,
				MaximumPageNumbersToDisplay = 5,
				UlElementClasses = new[] { "pagination" },
				LiElementClasses = new[] { "page-item" },
				PageClasses = new[] { "page-link" }
				})
	</div>
		}
</div> 