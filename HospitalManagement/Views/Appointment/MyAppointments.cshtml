@using X.PagedList
@using X.PagedList.Mvc.Core
@using HospitalManagement.Helpers
@{
	var startTime = new TimeSpan(7, 0, 0);
	var endTime = new TimeSpan(17, 0, 0);
	var slotDuration = new TimeSpan(1, 0, 0);
}
@model IPagedList<Appointment>
@section Styles {
	<link rel="stylesheet" href="~/css/Package/CreatePackage.css">
	<style>
		#loadingOverlay {
			display: none !important;
		}
	</style>
}
<div class="container-xxl" style="max-width: 100%;">
	<div class="container" style="max-width: 100%;">
		<div class="mb-4 text-center">
			@{
				string header = ViewBag.FilterType switch
				{
					"Today" => "Danh sách cuộc hẹn hôm nay",
					"Ongoing" => "Danh sách cuộc hẹn sắp tới",
					"Completed" => "Danh sách cuộc hẹn đã hoàn tất",
					"All" => "Danh sách tất cả cuộc hẹn"
				};
			}
			<h2 class="text-primary">@header</h2>
		</div>

		<div class="btn-group mb-3" role="group">
			<a asp-action="MyAppointments" asp-route-Type="All"
			   class="btn @(string.IsNullOrEmpty(ViewBag.Type) || ViewBag.Type == "All" ? "btn-primary fw-bold" : "btn-outline-primary")">Tất cả</a>

			<a asp-action="MyAppointments" asp-route-Type="Today"
			   class="btn @(ViewBag.Type == "Today" ? "btn-success fw-bold" : "btn-outline-success")">Hôm nay</a>

			<a asp-action="MyAppointments" asp-route-Type="Ongoing"
			   class="btn @(ViewBag.Type == "Ongoing" ? "btn-warning text-white fw-bold" : "btn-outline-warning")">Sắp tới</a>

			<a asp-action="MyAppointments" asp-route-Type="Completed"
			   class="btn @(ViewBag.Type == "Completed" ? "btn-danger fw-bold" : "btn-outline-danger")">Hoàn thành</a>
			@if (User.IsInRole("Doctor"))
			{
				<a asp-controller="User" asp-action="OngoingPatientScreen" class="btn btn-primary ms-3">
					Xem bệnh nhân sắp tới
				</a>
			}

		</div>

		<form method="get" asp-action="MyAppointments" asp-controller="Appointment" class="d-flex flex-wrap gap-3 align-items-center mb-4">
			<!-- Tìm kiếm theo tên bệnh nhân -->
			<div class="input-group" style="width: 250px;">
				@if (User.IsInRole("Doctor"))
				{
					<input type="text" name="SearchName" value="@ViewBag.SearchName" class="form-control" placeholder="Tìm theo tên bệnh nhân" />
					<span class="input-group-text bg-white"><i class="fas fa-search text-muted"></i></span>
				}
				else
				{
					<input type="text" name="SearchName" value="@ViewBag.SearchName" class="form-control" placeholder="Tìm theo tên bác sĩ" />
					<span class="input-group-text bg-white"><i class="fas fa-search text-muted"></i></span>
				}
			</div>

			<!-- Lọc theo Slot -->
			<select name="SlotFilter" class="form-select" style="width: 150px;">
				<option value="">Chọn khung giờ</option>
				@if (ViewBag.SlotOptions != null)
				{
					foreach (var slot in ViewBag.SlotOptions)
					{
						var isSelected = ViewBag.SlotFilter != null && ViewBag.SlotFilter == slot.SlotId.ToString();
						var timeLabel = $"{slot.StartTime:HH\\:mm} - {slot.EndTime:HH\\:mm}";
						<option value="@slot.SlotId" selected="@(isSelected ? "selected" : null)">@timeLabel</option>
					}
				}
				else
				{
					<option disabled selected>Không có khung giờ</option>
				}
			</select>

			<!-- Lọc theo ngày -->
			<input type="date" name="DateFilter" value="@ViewBag.DateFilter" class="form-control" style="width: 180px;" />

			<!-- Lọc theo trạng thái -->
			<select name="StatusFilter" class="form-select" style="width: 150px;">
				<option value="" selected="@(ViewBag.StatusFilter == null ? "selected" : null)">Tất cả trạng thái</option>
				<option value="Pending" selected="@(ViewBag.StatusFilter == "Pending" ? "selected" : null)">Chờ xác nhận</option>
				<option value="Confirmed" selected="@(ViewBag.StatusFilter == "Confirmed" ? "selected" : null)">Đã xác nhận</option>
				<option value="Ongoing" selected="@(ViewBag.StatusFilter == "Ongoing" ? "selected" : null)">Đang diễn ra</option>
				<option value="Completed" selected="@(ViewBag.StatusFilter == "Completed" ? "selected" : null)">Hoàn thành</option>
				<option value="Cancelled" selected="@(ViewBag.StatusFilter == "Cancelled" ? "selected" : null)">Đã hủy</option>
				<option value="Failed" selected="@(ViewBag.StatusFilter == "Cancelled" ? "selected" : null)">Thất bại (hủy bởi hệ thống)</option>
			</select>


			<!-- Nút lọc -->
			<button type="submit" class="btn btn-primary">Lọc</button>
			<a asp-controller="Appointment" asp-action="MyAppointments" class="btn btn-outline-secondary">
				<i class="fas fa-times me-1"></i>Xóa bộ lọc
			</a>
		</form>

		<!-- Appointment Table -->
		<div class="table-responsive" style="min-width: 100%;">
			<table class="table table-bordered table-hover text-center align-middle text-center w-100">
				<thead class="table-light">
					<tr>
						<th>Mã lịch hẹn</th>
						<th>Email</th>
						<th>Số điện thoại</th>
						<th>Mô tả</th>
						<th>Tên bác sĩ</th>
						<th>Khoa</th>
						<th>Tên nhân viên tạo</th>
						<th>Ngày</th>
						<th>Giờ bắt đầu</th>
						<th>Giờ kết thúc</th>
						<th>Dịch vụ</th>
						<th>Trạng thái</th>
						<th>Hành động</th>
						@if (User.IsInRole(AppConstants.Roles.Patient))
						{
							<th>Thanh toán</th>
						}

					</tr>
				</thead>
				<tbody>
					@if (Model != null && Model.Any())
					{
						foreach (var item in Model)
						{
							<tr>
								<td>@item.AppointmentId</td>
								<td>@item.Patient.Email</td>
								<td>@item.Patient.PhoneNumber</td>
								<td>@item.Note</td>
								<td>@(item.Doctor?.FullName ?? "N/A")</td>
								<td>@(item.Doctor?.DepartmentName ?? "N/A")</td>
								<td>@(item.CreatedByStaff?.FullName ?? "N/A")</td>
								<td>@item.Date</td>
								<td>@(item.Slot?.StartTime.ToString("HH\\:mm") ?? "N/A")</td>
								<td>@(item.Slot?.EndTime.ToString("HH\\:mm") ?? "N/A")</td>
								<td>
									@if (item.ServiceId != null)
									{
										@:Gói khám cơ bản: @item.Service?.ServiceType
									}
									else if (item.PackageId != null)
									{
										@:Gói khám nâng cao: @item.Package?.PackageName
									}
								</td>
								<td class="text-center align-middle">
									@if (item.Status == "Pending")
									{
										<span class="badge bg-warning text-dark">Chờ xác nhận</span>
									}
									else if (item.Status == "Ongoing")
									{
										<span class="badge bg-info text-white">Đang diễn ra</span>
									}
									else if (item.Status == "Rejected" || item.Status == "Failed")
									{
										<span class="badge bg-danger">Từ chối</span>
									}
									else if (item.Status == "Confirmed")
									{
										<span class="badge bg-success">Đã xác nhận</span>
									}
									else if (item.Status == "Cancelled")
									{
										<span class="badge bg-danger">Đã hủy bởi bệnh nhân</span>
									}
									else if (item.Status == "Completed")
									{
										var isPaid = item.PaymentStatus;
										<span class="badge @(isPaid == "Paid" ? "bg-primary" : "bg-secondary")">
											@(isPaid == "Paid" ? "Hoàn thành - Đã thanh toán" : "Hoàn thành - Chưa thanh toán")
										</span>
									}
									else if (item.Status == "Expired")
									{
										<span class="badge bg-dark text-white">Đã hết hạn</span>
									}
									else
									{
										<span class="badge bg-secondary">@item.Status</span>
									}
								</td>
								<td>
									<div class="mt-2">
										<a asp-action="Detail"
										   asp-controller="Appointment"
										   asp-route-appId="@item.AppointmentId"
										   asp-route-returnUrl="@Context.Request.Path"
										   class="btn btn-sm btn-info">
											<i class="fas fa-eye"></i> Chi tiết
										</a>
										@if (User.IsInRole("Patient") && item.Status == "Completed")
										{
											<a asp-action="Create"
											   asp-controller="Feedback"
											   asp-route-packageId="@item.PackageId"
											   asp-route-serviceId="@item.ServiceId"
											   class="btn btn-sm btn-info mt-2">
												<i class="fas fa-pen"></i> Đánh giá
											</a>
										}
										@if (User.IsInRole("Patient") && (item.Status == "Pending" || item.Status == "Confirmed"))
										{
											<form asp-action="Cancel" asp-controller="Appointment" method="post" onsubmit="return confirm('Bạn có chắc muốn hủy lịch khám này không?');">
												<input type="hidden" name="id" value="@item.AppointmentId" />
												<button type="submit" class="btn btn-sm btn-danger mt-2">
													<i class="fas fa-times"></i> Hủy
												</button>
											</form>
										}
									</div>
								</td>
								@if (User.IsInRole(AppConstants.Roles.Patient))
								{
									<td>
										<div class="mt-2">
											@if (item.Status == "Confirmed")
											{
												var openInvoice = item.InvoiceDetails
												.Where(i => i.AppointmentId == item.AppointmentId)
												.OrderBy(i => i.InvoiceDetailId)
												.FirstOrDefault();

												if (openInvoice != null)
												{
													if (openInvoice.PaymentStatus == "Unpaid")
													{
														<a asp-action="PayStartAppointmentForPatient"
														   asp-controller="Payment"
														   asp-route-packageId="@item.PackageId"
														   asp-route-serviceId="@item.ServiceId"
														   class="btn btn-sm btn-info mt-2">
															<i class="fas fa-pen"></i> Thanh toán trước
														</a>
													}
													else if (openInvoice.PaymentStatus == "Paid")
													{
														<p>Đã thanh toán trước</p>
													}
												}
												else
												{
													<p>Không có hóa đơn</p>
												}
											}
											else
											{
												<p>Không có hóa đơn</p>
											}
										</div>
									</td>
								}

							</tr>
						}
					}
					else
					{
						<tr>
							<td colspan="14" class="text-center text-muted">Không có lịch hẹn.</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
		@if (Model != null && Model.PageCount > 1)
		{
			<div class="d-flex justify-content-center mt-4">
				@Html.PagedListPager(Model, page => Url.Action("MyAppointments", new
				{
					page,
						SearchName = ViewBag.SearchName,
						SlotFilter = ViewBag.SlotFilter,
						DateFilter = ViewBag.DateFilter,
						StatusFilter = ViewBag.StatusFilter,
						Type = ViewBag.Type
						}), new PagedListRenderOptions
				{
					DisplayLinkToFirstPage = PagedListDisplayMode.Always,
					DisplayLinkToLastPage = PagedListDisplayMode.Always,
					DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
					DisplayLinkToNextPage = PagedListDisplayMode.Always,
					DisplayLinkToIndividualPages = true,
					MaximumPageNumbersToDisplay = 5,
					UlElementClasses = new[] { "pagination" },
					LiElementClasses = new[] { "page-item" },
					PageClasses = new[] { "page-link" }
				})
		</div>
				}
	</div>
</div>