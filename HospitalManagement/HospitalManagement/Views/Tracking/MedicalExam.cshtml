@model HospitalManagement.ViewModels.ExaminationViewModel
@{
	ViewData["Title"] = "Khám bệnh";
	Layout = null;
}
@if (TempData["error"] != null)
{
	<div id="popup-alert" class="popup-alert alert alert-danger alert-dismissible fade show text-center"
		 role="alert" style="z-index: 1055; border-radius: 8px;">
		<div>@TempData["error"]</div>
	</div>
}
else if (TempData["success"] != null)
{
	<div id="popup-alert" class="popup-alert alert alert-success alert-dismissible fade show text-center"
		 role="alert" style="z-index: 1055; border-radius: 8px;">
		<div>@TempData["success"]</div>
	</div>
}
<head>
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>

<div class="examination-wrapper">
	<div class="examination-container">
		<div class="row mb-4">
			<div class="col-12">
                <a asp-action="DoctorTodayAppointment" asp-controller="Tracking" class="btn btn-outline-primary">
					<i class="fas fa-arrow-left"></i> Trở về
				</a>
			</div>
		</div>
		<!-- Page Header -->
		<div class="page-header">
			<h2 class="page-title">
				<i class="fas fa-user-md"></i>
				Khám bệnh
			</h2>
		</div>
		<div class="patient-info mb-4">
			<p><strong>Họ tên:</strong> @Model.PatientName</p>
			<p><strong>Ngày sinh:</strong> @(Model.DateOfBirth.HasValue ? Model.DateOfBirth.Value.ToString("dd/MM/yyyy") : "")</p>
			<p><strong>Giới tính:</strong> @(Model.Gender == "M" ? "Nam" : Model.Gender == "F" ? "Nữ" : "Khác")</p>
		</div>
		<form asp-action="SubmitExamination" method="post">
			@Html.AntiForgeryToken()
			<input type="hidden" asp-for="AppointmentId" />

			<!-- Examination Details -->
			<div class="form-card">
				<div class="section-header">
					<i class="fas fa-stethoscope section-icon"></i>
					<h3 class="section-title">Thông tin khám bệnh</h3>
				</div>

				<div class="row">
					<div class="col-md-6 mb-3">
						<label class="form-label"><i class="fas fa-clipboard-list me-1"></i>Triệu chứng</label>
						<textarea asp-for="Symptoms" class="form-control" rows="4" placeholder="Mô tả triệu chứng..."></textarea>
					</div>
					<div class="col-md-6 mb-3">
						<label class="form-label"><i class="fas fa-diagnoses me-1"></i>Chẩn đoán / Ghi chú</label>
						<textarea asp-for="Diagnosis" class="form-control" rows="4" placeholder="Chẩn đoán..."></textarea>
					</div>
					<div class="col-md-6 mb-3">
						<label class="form-label"><i class="fas fa-pills me-1"></i>Đơn thuốc</label>
						<textarea asp-for="PrescriptionNote" class="form-control" rows="4" placeholder="Ghi đơn thuốc..."></textarea>
					</div>
				</div>
			</div>

			<!-- Chỉ định phòng xét nghiệm -->
			<div class="form-card room-section">
				<div class="section-header">
					<i class="fas fa-hospital section-icon"></i>
					<h3 class="section-title">Chỉ định phòng xét nghiệm</h3>
				</div>

				<div class="room-controls row">
					<div class="col-md-6 mb-3">
						<label class="form-label">Chọn loại xét nghiệm</label>
						<select class="form-select" id="testSelector">
							<option value="">-- Chọn loại xét nghiệm --</option>
							@foreach (var test in Model.AvailableTests)
							{
								<option value="@test.TestId">@test.Name</option>
							}
						</select>
					</div>

					<div class="col-md-6 mb-3">
						<label class="form-label">Chọn loại phòng tương ứng</label>
						<div id="roomTypeContainer">
							<select class="form-select" id="roomSelector">
								<option value="">-- Vui lòng chọn loại phòng xét nghiệm --</option>
							</select>
						</div>
					</div>
				</div>

				<!-- Danh sách phòng hiện ra -->
				<div class="available-rooms mt-3" id="availableRoomList">
					<!-- AJAX sẽ load ở đây -->
				</div>

				<!-- Danh sách phòng đã chỉ định -->
				<div class="assigned-rooms mt-4">
					<label class="form-label mb-3">
						<i class="fas fa-list-check me-1"></i>
						Các phòng đã chỉ định
					</label>
					<ul class="room-list" id="assignedRoomList">
						@await Html.PartialAsync("_AssignedRoom", Model.AssignedRooms)
					</ul>
				</div>
			</div>

			<!-- Submit Button -->
			<div class="d-flex gap-3 mt-4">
				<button type="submit" asp-controller="Tracking" asp-action="SaveExamination" class="btn-complete">
					<i class="fas fa-save me-2"></i>Lưu thông tin
				</button>
				<button type="submit" class="btn-complete"  
				@(ViewBag.AllTestsCompleted == false ? "disabled" : "")>
					<i class="fas fa-check-circle me-2"></i>
					Hoàn thành khám bệnh
				</button>

				@if (ViewBag.AllTestsCompleted == false)
				{
					<div class="text-danger mt-2">
						* Xét nghiệm chưa hoàn thành chưa thể hoàn thành khám.
					</div>
				}
			</div>
		</form>
	</div>
</div>

<script>
	$(document).ready(function () {

		// Khi chọn loại test
		$('#testSelector').on('change', function () {
			let testId = $(this).val();
			console.log("Đã chọn TestID:", testId);
			if (testId === '') return;

			// Gọi server để lấy partial view chứa dropdown loại phòng
			$.get('/Tracking/GetRoomTypesByTest', { testId }, function (html) {
				$('#roomTypeContainer').html(html); // Thay toàn bộ dropdown phòng
			});
		});

		// Khi chọn loại phòng (dùng delegation vì dropdown có thể thay đổi)
			$(document).on('change', '#roomSelector', function () {
		let roomType = $(this).val();
		let testId = $('#testSelector').val();
		let appointmentId = '@Model.AppointmentId';

		if (roomType === '' || testId === '') return;

		console.log("Calling /Tracking/GetRoomsByRoomType:", { roomType, testId, appointmentId });

		$.get('/Tracking/GetRoomsByRoomType', { roomType, testId, appointmentId }, function (html) {
			console.log("GetRoomsByRoomType response:", html); // Thêm dòng này
			$('#availableRoomList').html(html);
		});
	});
		// ✅ Khi nhấn "Thêm phòng"
		$(document).on('click', '.assign-room-btn', function () {
			let roomId = $(this).data('room-id');
			let appointmentId = '@Model.AppointmentId';
			let testId = $('#testSelector').val();

			$.ajax({
				url: '/Tracking/AssignRoom',
				type: 'POST',
				data: { roomId, appointmentId, testId },
				success: function (html) {
					$('#assignedRoomList').html(html);
				},
				error: function (xhr) {
					console.error("Error:", xhr.status, xhr.responseText);
					alert("Gọi API thất bại: " + xhr.status);
				}
			});
		});
	});
</script>
<style>
    /* ===== RESET & BASE ===== */
    * {
        box-sizing: border-box;
    }

    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        line-height: 1.6;
        color: #333;
        background-color: #f8f9fa;
        margin: 0;
        padding: 0;
    }

    /* ===== LAYOUT ===== */
    .examination-wrapper {
        min-height: 100vh;
        padding: 20px;
    }

    .examination-container {
        max-width: 1200px;
        margin: 0 auto;
        background: white;
        border-radius: 8px;
        padding: 30px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    /* ===== HEADER ===== */
    .page-header {
        border-bottom: 2px solid #e9ecef;
        padding-bottom: 15px;
        margin-bottom: 30px;
    }

    .page-title {
        color: #2c3e50;
        font-size: 28px;
        font-weight: 600;
        margin: 0;
    }

        .page-title i {
            color: #3498db;
            margin-right: 10px;
        }

    /* ===== PATIENT INFO ===== */
    .patient-info {
        background: #f8f9fa;
        padding: 20px;
        border-radius: 6px;
        border-left: 4px solid #3498db;
    }

        .patient-info p {
            margin: 8px 0;
            font-size: 16px;
        }

        .patient-info strong {
            color: #2c3e50;
            display: inline-block;
            min-width: 100px;
        }

    /* ===== FORM CARDS ===== */
    .form-card {
        background: white;
        border: 1px solid #e9ecef;
        border-radius: 8px;
        padding: 25px;
        margin-bottom: 25px;
    }

    .section-header {
        display: flex;
        align-items: center;
        margin-bottom: 25px;
        padding-bottom: 15px;
        border-bottom: 1px solid #e9ecef;
    }

    .section-icon {
        color: #3498db;
        font-size: 24px;
        margin-right: 12px;
    }

    .section-title {
        color: #2c3e50;
        font-size: 20px;
        font-weight: 600;
        margin: 0;
    }

    /* ===== FORM ELEMENTS ===== */
    .form-label {
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 8px;
        display: block;
    }

        .form-label i {
            color: #3498db;
            width: 16px;
        }

    .form-control, .form-select {
        width: 100%;
        padding: 12px 15px;
        border: 1px solid #ddd;
        border-radius: 6px;
        font-size: 14px;
        transition: border-color 0.3s ease;
    }

        .form-control:focus, .form-select:focus {
            outline: none;
            border-color: #3498db;
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);
        }

    textarea.form-control {
        resize: vertical;
        min-height: 100px;
    }

    /* ===== ROOM SECTION ===== */
    .room-section {
        border-left: 4px solid #27ae60;
    }

    .room-controls {
        margin-bottom: 20px;
    }

    .available-rooms {
        background: #f8f9fa;
        padding: 15px;
        border-radius: 6px;
        border: 1px solid #e9ecef;
    }

    .room-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }

        .room-list li {
            background: white;
            border: 1px solid #e9ecef;
            border-radius: 6px;
            padding: 15px;
            margin-bottom: 10px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

            .room-list li:last-child {
                margin-bottom: 0;
            }

    /* ===== BUTTONS ===== */
    .btn {
        padding: 10px 20px;
        border: none;
        border-radius: 6px;
        font-size: 14px;
        font-weight: 500;
        cursor: pointer;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        transition: all 0.3s ease;
    }

        .btn i {
            margin-right: 8px;
        }

    .btn-outline-primary {
        color: #3498db;
        border: 2px solid #3498db;
        background: transparent;
    }

        .btn-outline-primary:hover {
            color: white;
            background: #3498db;
        }

    .btn-complete {
        background: #3498db;
        color: white;
        padding: 12px 25px;
        font-size: 16px;
    }

        .btn-complete:hover:not(:disabled) {
            background: #3498db;
            transform: translateY(-1px);
        }

        .btn-complete:disabled {
            background: #95a5a6;
            cursor: not-allowed;
        }

    .assign-room-btn {
        background: #3498db;
        color: white;
        padding: 8px 16px;
        font-size: 13px;
    }

        .assign-room-btn:hover {
            background: #2980b9;
        }

    /* ===== ALERTS ===== */
    .popup-alert {
        position: fixed;
        top: 20px;
        right: 20px;
        min-width: 300px;
        z-index: 1055;
        animation: slideIn 0.3s ease;
    }

    @@keyframes slideIn {
        from

    {
        transform: translateX(100%);
        opacity: 0;
    }

    to {
        transform: translateX(0);
        opacity: 1;
    }

    }

    .alert {
        padding: 15px 20px;
        border-radius: 6px;
        font-weight: 500;
    }

    .alert-danger {
        background: #e74c3c;
        color: white;
        border: none;
    }

    .alert-success {
        background: #27ae60;
        color: white;
        border: none;
    }

    /* ===== UTILITIES ===== */
    .text-danger {
        color: #e74c3c !important;
        font-weight: 500;
    }

    .mb-3 {
        margin-bottom: 1rem;
    }

    .mb-4 {
        margin-bottom: 1.5rem;
    }

    .mt-2 {
        margin-top: 0.5rem;
    }

    .mt-3 {
        margin-top: 1rem;
    }

    .mt-4 {
        margin-top: 1.5rem;
    }

    .d-flex {
        display: flex;
    }

    .gap-3 {
        gap: 1rem;
    }

    .row {
        display: flex;
        flex-wrap: wrap;
        margin: 0 -15px;
    }

    .col-12,
    .col-md-6 {
        padding: 0 15px;
    }

    .col-12 {
        flex: 0 0 100%;
    }

    .col-md-6 {
        flex: 0 0 50%;
    }

    /* ===== RESPONSIVE ===== */
    @@media (max-width: 768px) {
        .examination-container

    {
        padding: 20px;
        margin: 10px;
    }

    .page-title {
        font-size: 24px;
    }

    .col-md-6 {
        flex: 0 0 100%;
    }

    .d-flex {
        flex-direction: column;
    }

    .popup-alert {
        left: 20px;
        right: 20px;
        min-width: auto;
    }

    }
</style>


	