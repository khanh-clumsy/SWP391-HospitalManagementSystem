@model HospitalManagement.ViewModels.Login
@{
	Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
	<title>Login</title>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1" />

	<link rel="icon" type="image/png" href="~/img/icons/favicon.ico" />
	<link rel="stylesheet" type="text/css" href="~/vendor/bootstrap/css/bootstrap.min.css">
	<link rel="stylesheet" type="text/css" href="~/fonts/font-awesome-4.7.0/css/font-awesome.min.css">
	<link rel="stylesheet" type="text/css" href="~/fonts/Linearicons-Free-v1.0.0/icon-font.min.css">
	<link rel="stylesheet" type="text/css" href="~/vendor/animate/animate.css">
	<link rel="stylesheet" type="text/css" href="~/vendor/css-hamburgers/hamburgers.min.css">
	<link rel="stylesheet" type="text/css" href="~/vendor/animsition/css/animsition.min.css">
	<link rel="stylesheet" type="text/css" href="~/vendor/select2/select2.min.css">
	<link rel="stylesheet" type="text/css" href="~/vendor/daterangepicker/daterangepicker.css">
	<link rel="stylesheet" type="text/css" href="~/css/util.css">
	<link rel="stylesheet" type="text/css" href="~/css/login.css">
	<style>
		.popup-alert {
			position: fixed;
			text-align: center;
			top: 5px;
			right: 5px;
		}

		.role-selector {
			gap: 10px;
		}

		.role-option {
			position: relative;
			padding: 10px 20px;
			cursor: pointer;
			font-weight: bold;
			color: #333;
			transition: color 0.3s;
		}

			.role-option::after {
				content: "";
				position: absolute;
				height: 2px;
				width: 0;
				background-color: #007bff;
				bottom: 0;
				left: 50%;
				transition: 0.4s ease;
				transform: translateX(-50%);
			}

		input[type="radio"]:checked + .role-option {
			color: #007bff;
		}

			input[type="radio"]:checked + .role-option::after {
				width: 100%;
			}
	</style>

</head>

<body>
	<div class="limiter">
		<div class="container-login100" style="background-image: url('@Url.Content("~/img/bg.jpg")');">

			<div>
				@if (TempData["error"] != null)
				{
					<div id="popup-alert" class="popup-alert alert alert-danger alert-dismissible fade show text-center" role="alert" style="z-index: 1055; border-radius: 8px;">
						<div>@TempData["error"]</div>
					</div>
				}
				@if (TempData["success"] != null)
				{
					<div id="popup-alert" class="popup-alert alert alert-success alert-dismissible fade show text-center" role="alert" style="z-index: 1055; border-radius: 8px;">
						<div>@TempData["success"]</div>
					</div>
				}
			</div>

			<div class="wrap-login100 p-l-110 p-r-110 p-t-62 p-b-33">
				<form id="loginForm" onsubmit="return submitForm()" asp-action="Login" asp-controller="Auth" method="post" class="login100-form validate-form flex-sb flex-w">

					<!-- Role selection -->
					<div class="role-selector d-flex justify-content-between mb-4">
						@foreach (var role in new[] { "Patient", "Doctor", "Staff" })
						{
							<input type="radio" name="Role" value="@role" id="role-@role" class="d-none role-radio" @(string.IsNullOrEmpty(Model.Role) && role == "Patient" ? "checked" : Model.Role == role ? "checked" : "") />
							<label for="role-@role" class="role-option">@role</label>
						}
					</div>

					<span class="login100-form-title p-b-40">Sign In</span>

					<!-- Email -->
					<div class="p-t-13 p-b-9">
						<span class="txt1">Email</span>
						<span asp-validation-for="Email" class="text-danger small"></span>
					</div>
					<div class="wrap-input100 validate-input">
						<input asp-for="Email" class="input100" />
						<span class="focus-input100"></span>
					</div>

					<!-- Password -->
					<div class="p-t-13 p-b-9">
						<span class="txt1">Password</span>
						<a asp-action="ForgotPassword" asp-controller="Auth" class="txt2 bo1 m-l-5">Forgot?</a>
						<span asp-validation-for="Password" class="text-danger small"></span>
					</div>
					<div class="wrap-input100 validate-input">
						<input asp-for="Password" type="password" class="input100" />
						<span class="focus-input100"></span>
					</div>

					<!-- Submit -->
					<div class="container-login100-form-btn m-t-17">
						<button type="submit" class="login100-form-btn">Sign In</button>
					</div>

					<div class="w-full text-center p-t-55">
						<span class="txt2">Not a member?</span>
						<a asp-action="Register" asp-controller="Auth" class="txt2 bo1">Sign up now</a>
					</div>
				</form>

				<!-- Gmail -->
				<div class="d-flex justify-content-center w-100 mb-3" id="google-login">
					<a href="javascript:void(0)" onclick="loginWithGoogle()" class="btn-google m-b-20 w-75">
						<img src="~/img/icons/icon-google.png" alt="GOOGLE" />
						Google
					</a>
				</div>

				<!-- Back -->
				<div class="container-login100-form-btn m-t-17">
					<a asp-controller="Home" asp-action="Index" class="login100-form-btn">Back to Home</a>
				</div>

			</div>
		</div>
	</div>



	<div id="loadingOverlay">
		<div class="custom-spinner"></div>
	</div>


	<script src="~/vendor/jquery/jquery-3.2.1.min.js"></script>
	<script src="~/vendor/animsition/js/animsition.min.js"></script>
	<script src="~/vendor/bootstrap/js/popper.js"></script>
	<script src="~/vendor/bootstrap/js/bootstrap.min.js"></script>
	<script src="~/vendor/select2/select2.min.js"></script>
	<script src="~/vendor/daterangepicker/moment.min.js"></script>
	<script src="~/vendor/daterangepicker/daterangepicker.js"></script>
	<script src="~/vendor/countdowntime/countdowntime.js"></script>
	<script src="~/js/login.js"></script>
	<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
	<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

	<script>
		function loginWithGoogle() {
			// Lấy role được chọn
			const selectedRole = document.querySelector('input[name="Role"]:checked').value;

			// Redirect đến LoginGoogle với role
			window.location.href = '@Url.Action("LoginGoogle", "Auth")?role=' + selectedRole;
		}

		// Auto-hide popup alerts after 3 seconds
		window.setTimeout(function () {
			const alertBox = document.getElementById('popup-alert');
			if (alertBox) {
				alertBox.classList.remove('show');
				alertBox.classList.add('hide');
				setTimeout(() => alertBox.remove(), 500);
			}
		}, 3000);


		function submitForm() {
			// console.log("submitForm called");

			var form = $("#loginForm");
			// console.log("0000000000000000000");

			if (!form.valid()) {
				// console.log("111111111111111111111111");
				return false;
			}
			// console.log("2222222222222222222222222222");

			const overlay = document.getElementById("loadingOverlay");
			overlay.style.visibility = "visible";
			overlay.style.opacity = "1";

			// console.log("3333333333333333333333333333");
			return true;
		}


		document.addEventListener('keydown', function (e) {
			if (e.key === "Enter") {
				e.preventDefault();
				e.stopPropagation();
				return false;
			}
		});

	</script>
	

</body>
</html>