@model List<ScheduleViewModel>
@using HospitalManagement.ViewModels
@{
    Layout = null;
    var selectedWeekStart = (DateOnly)ViewBag.WeekStart;
    var fromScheduleId = (int)ViewBag.FromScheduleId;
    DateOnly selectedWeekEnd = selectedWeekStart.AddDays(6);
    var firstWeekStart = (DateOnly)ViewBag.FirstWeekStart;
    var lastWeekStart = (DateOnly)ViewBag.LastWeekStart;
    var daysInWeek = Enumerable.Range(0, 7).Select(i => selectedWeekStart.AddDays(i)).ToList(); 
    var slots = ViewBag.Slots as List<Slot>;
    var grouped = Model.GroupBy(s => (s.SlotIndex, s.Day)).ToDictionary(g => g.Key, g => g.First());
}
<head>
    <style>
        .selectable-slot.selected {
            background-color: #cfe2ff;
            border-color: #0d6efd;
            color: #0d6efd;
        }
    </style>
</head>

<body>
    <form method="post" asp-action="SubmitScheduleChangeRequest" asp-controller="Doctor">
        <input type="hidden" name="FromScheduleId" value="@fromScheduleId" />
        <input type="hidden" id="SelectedDay" name="SelectedDay" />
        <input type="hidden" id="SelectedSlot" name="SelectedSlot" />

        <div class="d-flex justify-content-center align-items-center mb-3">
            <div class="d-flex gap-2 align-items-center">
                <button class="btn btn-outline-primary" onclick="changePopupWeek(-1)" @(selectedWeekStart <= firstWeekStart ? "disabled" : "")>
                    <i class="bi bi-chevron-left"></i>
                </button>

                <select id="weekDropdown" class="form-select" style="width:250px;" onchange="onPopupWeekChange(this)">
                    @{
                        var start = firstWeekStart;
                        while (start <= lastWeekStart)
                        {
                            var label = $"{start:dd/MM} - {start.AddDays(6):dd/MM}";
                            <option value="@start.ToString("yyyy-MM-dd")" selected="@(start == selectedWeekStart)">
                                @label
                            </option>
                            ;
                            start = start.AddDays(7);
                        }
                    }
                </select>

                <button class="btn btn-outline-primary" onclick="changePopupWeek(1)" @(selectedWeekStart >= lastWeekStart ? "disabled" : "")>
                    <i class="bi bi-chevron-right"></i>
                </button>
            </div>
        </div>
        <!-- In bảng chọn ngày muốn đổi đến -->
        <div class="table-responsive">
            <table class="table table-bordered text-center">
                <thead class="table-light">
                    <tr>
                        <th>Slot</th>
                        @foreach (var day in daysInWeek)
                        {
                            <th>@day.ToString("ddd dd/MM")</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var slot in slots)
                    {
                        <tr>
                            <td><strong>Slot @slot.SlotId</strong><br />@slot.StartTime - @slot.EndTime</td>
                            @foreach (var day in daysInWeek)
                            {
                                var key = (slot.SlotId, day);
                                bool isFuture = day > DateOnly.FromDateTime(DateTime.Today.AddDays(1)); // chỉ cho chọn ngày mai trở đi

                                if (!isFuture)
                                {
                                    // Ngày đã qua, không cho chọn
                                    <td class="text-muted" style="opacity: 0.5;">Không chọn</td>
                                }
                                else if (grouped.ContainsKey(key))
                                {
                                    // Đã có lịch rồi => không cho chọn
                                    <td class="bg-light text-muted">
                                        <div class="small">Đã có lịch</div>
                                    </td>
                                }
                                else
                                {
                                    // Slot trống và hợp lệ => cho chọn
                                    <td>
                                        <div class="selectable-slot p-2 border rounded"
                                             data-slot="@slot.SlotId"
                                             data-day="@day.ToString("yyyy-MM-dd")"
                                             style="cursor: pointer;">
                                            Chọn
                                        </div>
                                    </td>
                                }
                            }
                        </tr>
                    }

                </tbody>
            </table>
        </div>

        <div class="mb-3">
            <label for="Reason" class="form-label">Lý do đổi lịch</label>
            <textarea name="Reason" class="form-control" required></textarea>
        </div>

        <div class="text-end">
            <button type="submit" class="btn btn-primary">Gửi yêu cầu đổi lịch</button>
        </div>
    </form>
    <script>
        document.querySelectorAll('.selectable-slot').forEach(slot => {
            slot.addEventListener('click', function () {
                document.querySelectorAll('.selectable-slot').forEach(s => s.classList.remove('selected'));
                this.classList.add('selected');

                const day = this.dataset.day;
                const slotIndex = this.dataset.slot;

                document.getElementById('SelectedDay').value = day;
                document.getElementById('SelectedSlot').value = slotIndex;
            });
        });

        function onPopupWeekChange(select) {
            const weekStart = select.value;
            const fromScheduleId = document.querySelector('input[name="FromScheduleId"]').value;

            loadPopup(fromScheduleId, weekStart);
        }

        function changePopupWeek(delta) {
            const dropdown = document.getElementById("weekDropdown");
            const options = dropdown.options;
            const currentIndex = dropdown.selectedIndex;
            const newIndex = currentIndex + delta;

            if (newIndex >= 0 && newIndex < options.length) {
                const newWeek = options[newIndex].value;
                const fromScheduleId = document.querySelector('input[name="FromScheduleId"]').value;

                loadPopup(fromScheduleId, newWeek);
            }
        }

        function loadPopup(fromScheduleId, weekStart) {
            $.ajax({
                url: `/Doctor/GetAvailableSlotsPopup?weekStart=${weekStart}`,
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ fromScheduleId: fromScheduleId }),
                success: function (partialHtml) {
                    $('#changeSlotModal .modal-body').html(partialHtml);
                    $('#changeSlotModal').modal('show');
                },
                error: function () {
                    alert("Đã có lỗi xảy ra khi tải danh sách lịch trống.");
                }
            });
        }
    </script>
</body>
